if [ -f ~/.bashrc ]; then
    source ~/.bashrc
fi
export PATH=/usr/local/share/npm/bin:\/usr/local/bin:/usr/local/sbin:$PATH
export PATH=/opt/local/bin:/opt/local/sbin:./node_modules/.bin:$PATH
export EDITOR=vim

export MAVEN_OPTS="-Xmx1024M -Xss256M -XX:MaxPermSize=2048M -XX:+CMSClassUnloadingEnabled -XX:-UseGCOverheadLimit"

export GOPATH=~/go
export PATH=$PATH:$GOPATH/bin

export GEM_HOME=~/.gem

# Initialize rbenv
eval "$(rbenv init -)"


# For compilation of projects that require OpenSSL symlinked in
export PATH="/usr/local/opt/openssl/bin:$PATH"
export LDFLAGS="-L/usr/local/opt/openssl/lib"
export CPPFLAGS="-I/usr/local/opt/openssl/include"
export PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig"

### Homebrew configuration
if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi

export HOMEBREW_NO_INSECURE_REDIRECT=1

# Add task warrior
export PATH=$PATH:/Users/znelson/git/dev/taskwarrior/src

# Export tfenv
export PATH=$PATH:/Users/znelson/git/dev/tfenv/bin


# Source aliases
if [ -f ~/.aliases ]; then
    source ~/.aliases
fi

# Set the max number of open files to a sane default, stupid Mac's 256 limit
ulimit -n 8192

# Shortcut to source the bash profile
_() {
  source ~/.bash_profile
}

# Gets the real directory, i.e. here and not where it's symlinked from (~/.bash_profile).
# That way we can source other files in this directory easily.
CURR_DIR=$(dirname $(readlink ${BASH_SOURCE}))
echo $CURR_DIR

# Load all task warrior shortcut functions
if [ -f $CURR_DIR/bash_taskwarrior ]; then
    source $CURR_DIR/bash_taskwarrior
fi

# Load all aws shortcut functions
if [ -f $CURR_DIR/bash_aws ]; then
    source $CURR_DIR/bash_aws
fi

# Load all aws shortcut functions
if [ -f $CURR_DIR/bash_github ]; then
    source $CURR_DIR/bash_github
fi

# Load all bash shortcut functions
if [ -f $CURR_DIR/bash_shell ]; then
    source $CURR_DIR/bash_shell
fi

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"


logs_ip() {
  dig @10.5.0.2 logs-$1.virtru.internal
}

iso() {
  iso_str="$(node --eval "console.log(new Date().toISOString())")"
  echo $iso_str
  echo $iso_str | pbcopy
}

export VAGRANT_DEFAULT_PROVIDER=vmware_fusion

export ANSIBLE_VAULT_PASSWORD_FILE=~/.creds/.vault_pass.txt
[ -s "/Users/znelson/.virtrurc" ] && . /Users/znelson/.virtrurc # This sources virtru vars

export VIRTRU_OWA_USERNAME=zack@virtrutest.biz
export VIRTRU_OWA_PASSWORD=dNBsmUHeBRbeqqzuUFbkNrvWUa2QyJkqUJKuoV83amJCxzjFu?YAiyAhepZ+Qtsi